import 'package:diabetty/blocs/dayplan_manager.dart';
import 'package:diabetty/blocs/diary.bloc.dart';
import 'package:diabetty/blocs/therapy_manager.dart';
import 'package:diabetty/services/authentication/auth_service/auth_service.dart';
import 'package:diabetty/system/app_context.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:diabetty/models/user.model.dart' as UserModel;

/// Used to create user-dependent objects that need to be accessible by all widgets.
/// This widgets should live above the [MaterialApp].
/// See [AuthWidget], a descendant widget that consumes the snapshot generated by this builder.
class AuthWidgetBuilder extends StatelessWidget {
  const AuthWidgetBuilder({Key key, @required this.builder}) : super(key: key);
  final Widget Function(
      BuildContext, AsyncSnapshot<User>, AsyncSnapshot<UserModel.User>) builder;

  @override
  Widget build(BuildContext context) {
    final authService = Provider.of<AuthService>(context, listen: false);
    final appContext = Provider.of<AppContext>(context, listen: false);

    return StreamBuilder<User>(
        stream: authService.onAuthStateChanged,
        builder: (BuildContext context, AsyncSnapshot<User> snapshot) {
          final User user = snapshot.data;
          return StreamBuilder<UserModel.User>(
              stream: appContext.onUserChanged,
              builder: (BuildContext context, asnapshot) {
                //print(asnapshot.data != null ? asnapshot.data.toJson() : null);
                if (user != null) {
                  return builder(context, snapshot, asnapshot);
                }
                return builder(context, snapshot, asnapshot);
              });
        });
  }
}
